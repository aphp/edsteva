name: Python package
on:
  pull_request:
  push:
    tags:
      - "v*.*.*"
jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@master
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Load cached Poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry config experimental.new-installer false
          poetry install --without dev
      - name: Build
        run: poetry build
      - name: Publish
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_TOKEN }}
          poetry publish -r testpypi
      - name: Set up Git
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
      - name: Build documentation
        run: |
          git fetch origin gh-pages
          poetry run mike deploy --push --no-redirect --update-aliases $GITHUB_REF_NAME latest
